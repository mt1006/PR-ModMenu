name: Release
on:
  workflow_dispatch:
    inputs:
      previousVersion:
        description: 'Previous Version (Do not include v prefix, must be same as the last version tag! Example: 1.4.1)'
        required: true
      version:
        description: 'Version (Do not include v prefix! Example: 1.4.2)'
        required: true
jobs:
  release:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create version tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v${{ github.event.inputs.version }}",
              sha: context.sha
            })
      - name: Fetch tags
        run: git fetch --tags
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21
      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew
      - name: Build
        run: ./gradlew generateChangelog build publish github modrinth curseforge --stacktrace --parallel -PlastTag="v${{ github.event.inputs.previousVersion }}" -PcurrentTag="v${{ github.event.inputs.version }}"
        env:
          MAVEN_URL: ${{ secrets.MAVEN_URL }}
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_API_KEY }}
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          DISCORD_ANNOUNCEMENT_WEBHOOK: ${{ secrets.DISCORD_ANNOUNCEMENT_WEBHOOK }}
      - name: Capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/
